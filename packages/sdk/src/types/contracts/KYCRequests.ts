/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface KYCRequestsInterface extends utils.Interface {
  functions: {
    "KYCRole()": FunctionFragment;
    "KYC_REQUESTS_DEP()": FunctionFragment;
    "KYC_REQUESTS_RESOURCE()": FunctionFragment;
    "UPDATE_PERMISSION()": FunctionFragment;
    "__KYCRequests_init(string)": FunctionFragment;
    "dropKYCRequest()": FunctionFragment;
    "getInjector()": FunctionFragment;
    "requestKYC(string)": FunctionFragment;
    "setDependencies(address)": FunctionFragment;
    "setInjector(address)": FunctionFragment;
    "updateKYCRole(string)": FunctionFragment;
    "usersRequestInfo(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "KYCRole"
      | "KYC_REQUESTS_DEP"
      | "KYC_REQUESTS_RESOURCE"
      | "UPDATE_PERMISSION"
      | "__KYCRequests_init"
      | "dropKYCRequest"
      | "getInjector"
      | "requestKYC"
      | "setDependencies"
      | "setInjector"
      | "updateKYCRole"
      | "usersRequestInfo"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "KYCRole", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "KYC_REQUESTS_DEP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "KYC_REQUESTS_RESOURCE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "UPDATE_PERMISSION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "__KYCRequests_init",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "dropKYCRequest",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInjector",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "requestKYC", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setDependencies",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setInjector", values: [string]): string;
  encodeFunctionData(
    functionFragment: "updateKYCRole",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "usersRequestInfo",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "KYCRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "KYC_REQUESTS_DEP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "KYC_REQUESTS_RESOURCE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UPDATE_PERMISSION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "__KYCRequests_init",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "dropKYCRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInjector",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "requestKYC", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setDependencies",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setInjector",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateKYCRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "usersRequestInfo",
    data: BytesLike
  ): Result;

  events: {
    "KYCRequestDropped(address,uint256)": EventFragment;
    "KYCRoleRequested(address,uint256)": EventFragment;
    "KYCRoleUpdated(string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "KYCRequestDropped"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "KYCRoleRequested"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "KYCRoleUpdated"): EventFragment;
}

export interface KYCRequestDroppedEventObject {
  userAddr: string;
  requestId: BigNumber;
}
export type KYCRequestDroppedEvent = TypedEvent<
  [string, BigNumber],
  KYCRequestDroppedEventObject
>;

export type KYCRequestDroppedEventFilter =
  TypedEventFilter<KYCRequestDroppedEvent>;

export interface KYCRoleRequestedEventObject {
  userAddr: string;
  requestId: BigNumber;
}
export type KYCRoleRequestedEvent = TypedEvent<
  [string, BigNumber],
  KYCRoleRequestedEventObject
>;

export type KYCRoleRequestedEventFilter =
  TypedEventFilter<KYCRoleRequestedEvent>;

export interface KYCRoleUpdatedEventObject {
  newKYCRole: string;
}
export type KYCRoleUpdatedEvent = TypedEvent<
  [string],
  KYCRoleUpdatedEventObject
>;

export type KYCRoleUpdatedEventFilter = TypedEventFilter<KYCRoleUpdatedEvent>;

export interface KYCRequests extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: KYCRequestsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    KYCRole(overrides?: CallOverrides): Promise<[string]>;

    KYC_REQUESTS_DEP(overrides?: CallOverrides): Promise<[string]>;

    KYC_REQUESTS_RESOURCE(overrides?: CallOverrides): Promise<[string]>;

    UPDATE_PERMISSION(overrides?: CallOverrides): Promise<[string]>;

    __KYCRequests_init(
      KYCRole_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    dropKYCRequest(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getInjector(
      overrides?: CallOverrides
    ): Promise<[string] & { _injector: string }>;

    requestKYC(
      KYCHash_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setDependencies(
      registryAddress_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setInjector(
      _injector: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateKYCRole(
      newKYCRole_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    usersRequestInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, boolean] & { requestId: BigNumber; existingRequest: boolean }
    >;
  };

  KYCRole(overrides?: CallOverrides): Promise<string>;

  KYC_REQUESTS_DEP(overrides?: CallOverrides): Promise<string>;

  KYC_REQUESTS_RESOURCE(overrides?: CallOverrides): Promise<string>;

  UPDATE_PERMISSION(overrides?: CallOverrides): Promise<string>;

  __KYCRequests_init(
    KYCRole_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  dropKYCRequest(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getInjector(overrides?: CallOverrides): Promise<string>;

  requestKYC(
    KYCHash_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setDependencies(
    registryAddress_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setInjector(
    _injector: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateKYCRole(
    newKYCRole_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  usersRequestInfo(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, boolean] & { requestId: BigNumber; existingRequest: boolean }
  >;

  callStatic: {
    KYCRole(overrides?: CallOverrides): Promise<string>;

    KYC_REQUESTS_DEP(overrides?: CallOverrides): Promise<string>;

    KYC_REQUESTS_RESOURCE(overrides?: CallOverrides): Promise<string>;

    UPDATE_PERMISSION(overrides?: CallOverrides): Promise<string>;

    __KYCRequests_init(
      KYCRole_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    dropKYCRequest(overrides?: CallOverrides): Promise<void>;

    getInjector(overrides?: CallOverrides): Promise<string>;

    requestKYC(KYCHash_: string, overrides?: CallOverrides): Promise<void>;

    setDependencies(
      registryAddress_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setInjector(_injector: string, overrides?: CallOverrides): Promise<void>;

    updateKYCRole(
      newKYCRole_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    usersRequestInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, boolean] & { requestId: BigNumber; existingRequest: boolean }
    >;
  };

  filters: {
    "KYCRequestDropped(address,uint256)"(
      userAddr?: null,
      requestId?: null
    ): KYCRequestDroppedEventFilter;
    KYCRequestDropped(
      userAddr?: null,
      requestId?: null
    ): KYCRequestDroppedEventFilter;

    "KYCRoleRequested(address,uint256)"(
      userAddr?: null,
      requestId?: null
    ): KYCRoleRequestedEventFilter;
    KYCRoleRequested(
      userAddr?: null,
      requestId?: null
    ): KYCRoleRequestedEventFilter;

    "KYCRoleUpdated(string)"(newKYCRole?: null): KYCRoleUpdatedEventFilter;
    KYCRoleUpdated(newKYCRole?: null): KYCRoleUpdatedEventFilter;
  };

  estimateGas: {
    KYCRole(overrides?: CallOverrides): Promise<BigNumber>;

    KYC_REQUESTS_DEP(overrides?: CallOverrides): Promise<BigNumber>;

    KYC_REQUESTS_RESOURCE(overrides?: CallOverrides): Promise<BigNumber>;

    UPDATE_PERMISSION(overrides?: CallOverrides): Promise<BigNumber>;

    __KYCRequests_init(
      KYCRole_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    dropKYCRequest(
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getInjector(overrides?: CallOverrides): Promise<BigNumber>;

    requestKYC(
      KYCHash_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setDependencies(
      registryAddress_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setInjector(
      _injector: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateKYCRole(
      newKYCRole_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    usersRequestInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    KYCRole(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    KYC_REQUESTS_DEP(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    KYC_REQUESTS_RESOURCE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    UPDATE_PERMISSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    __KYCRequests_init(
      KYCRole_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    dropKYCRequest(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getInjector(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    requestKYC(
      KYCHash_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setDependencies(
      registryAddress_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setInjector(
      _injector: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateKYCRole(
      newKYCRole_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    usersRequestInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
