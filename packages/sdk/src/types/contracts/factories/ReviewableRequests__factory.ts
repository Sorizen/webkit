/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ReviewableRequests,
  ReviewableRequestsInterface,
} from "../ReviewableRequests";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "acceptData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "rejectData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "misc",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "RequestCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestDropped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RequestRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRequestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "acceptData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "rejectData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "misc",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "RequestUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId_",
        type: "uint256",
      },
    ],
    name: "acceptRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executor_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "acceptData_",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rejectData_",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "misc_",
        type: "string",
      },
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    name: "createRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId_",
        type: "uint256",
      },
    ],
    name: "dropRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInjector",
    outputs: [
      {
        internalType: "address",
        name: "_injector",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason_",
        type: "string",
      },
    ],
    name: "rejectRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "enum IReviewableRequests.RequestStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "acceptData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rejectData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "misc",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress_",
        type: "address",
      },
    ],
    name: "setDependencies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_injector",
        type: "address",
      },
    ],
    name: "setInjector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "executor_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "acceptData_",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rejectData_",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "misc_",
        type: "string",
      },
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    name: "updateRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ReviewableRequests__factory {
  static readonly abi = _abi;
  static createInterface(): ReviewableRequestsInterface {
    return new utils.Interface(_abi) as ReviewableRequestsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReviewableRequests {
    return new Contract(address, _abi, signerOrProvider) as ReviewableRequests;
  }
}
